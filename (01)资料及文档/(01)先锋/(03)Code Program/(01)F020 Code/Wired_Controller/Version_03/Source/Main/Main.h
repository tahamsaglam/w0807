/* copyright (c)  周前 2012-08-19All rights reserved   */
/****************************************************************
	模型		: All
	机能		: 公共声明文件
	作者		: Zq
	备注		: 声明文件

*****************************************************************/
#ifndef _MAIN_H
#define _MAIN_H

/*********************************************************
按键类型定义:Source Key、矩阵按键、有线遥控、无线遥控
**********************************************************/
#undef SYSTEM_SOURCE_KEY
#define SYSTEM_MATRIX_KEY
#undef SYSTEM_WIRED_KEY
#undef SYSTEM_WIRELESS_KEY
#define RL_8MS
/***************************************************************
Port 0/1输入方式配置:模拟输入(0)和非模拟输入(1)
****************************************************************/
#define PT_P0_IN_MD	0xff//	0b11111111		/*P0配置非模拟输入*/
#define PT_P1_IN_MD	0xff//	0b11111111		/*P1配置非模拟输入*/
#define PT_P2_IN_MD	0xff//	0b11111111		/*P2配置非模拟输入*/

/***************************************************************
Port 0/1输出方式配置:漏极开路(0)和推挽输出(1)
****************************************************************/
#define PT_P0_OUT_MD	0xff//0b11111111		/*P0配置推挽输出*/
#define PT_P1_OUT_MD	0xff//0b11111111		/*P1配置推挽输出*/
#define PT_P2_OUT_MD	0xff//0b11111111		/*P2配置推挽输出*/

/***************************************************************
SKIP端口0/1跳过寄存器:跳过(1)和不跳过(0)
****************************************************************/
#define PT_P0_SKIP_MODE	0x01//0b0000001		/*P0.n非跳过,P0.1为DAC输出*/
#define PT_P1_SKIP_MODE	0x00//0b0000000		/*P1.n非跳过*/
#define PT_P2_SKIP_MODE	0x00//0b0000000		/*P2.n非跳过*/

/****************************************************************
DAC设定:使能DAC;写IDA0H触发DAC输出更新;1.0 mA满度输出电流
*****************************************************************/
#define DAC_INIT_SET	0xf1//0b11110001		
#define DAC_DateOutput(c)	{ IDA0L =(c&0x03);IDA0H =(c>>2);}

/****************************************************************
OSC设定
*****************************************************************/
#define OSC_INIT_SET	0x83//0b10000011		/*OSCICN内部H-F振荡器使能，SYSCLK为内部H-F振荡器输出（不分频）*/
#define OSC_FREQ_SET	0x00//0b00000000		/*OSCSEL系统时钟取自内部高频振荡器，分频数由OSCICN寄存器中的IFCN位决定。*/
#define OSC_ICL_SET	0x00//0b00000000		/*OSCICL内部H-F振荡器校准寄存器，内部振荡器的基频24.5M*/

/****************************************************************
Timer3设定:Timer 3 enabled; system clock divided by 12.
****************************************************************/
#define TIMER3_CLOCK_SET	0x04//0b00000100	/*使能Timer3，使用系统时钟12分频*/
#define TIMER3_CKCON_SET  0xc0//0b11000000	/*TIMER3 H/L时钟选择*/
#ifdef RL_8MS
#define TIMER3_RLL_SET		0xCD			/*Timer3自动重载的Low Byte数字设定,8ms*/
#define TIMER3_RLH_SET		0x3F			/*Timer3自动重载的High Byte数字设定,8ms*/
#else
#if 1
#define TIMER3_RLL_SET		0x61			/*Timer3自动重载的Low Byte数字设定,25ms*/
#define TIMER3_RLH_SET		0xc7			/*Timer3自动重载的High Byte数字设定,25ms*/
#else
#define TIMER3_RLL_SET		0x00			/*Timer3自动重载的Low Byte数字设定,25ms*/
#define TIMER3_RLH_SET		0x00			/*Timer3自动重载的High Byte数字设定,25ms*/
#endif
#endif

/****************************************************************
IE中断允许寄存器
****************************************************************/
#define IE_SET	 0x80	//0b10000000			/*使能EA=1，开总中断*/

/****************************************************************
IP中断中断优先级寄存器
****************************************************************/
#define IP_SET	0x00 //	0b00000000			/*C51固有的中断中断优先级为低*/


/****************************************************************
EIE1扩展中断允许1
****************************************************************/
#define EIE1_SET	0x80//	0b10000000			/*使能Timer3中断*/

/****************************************************************
EIP1扩展中断优先级1
****************************************************************/
#define EIP1_SET	0x80//	0b10000000			/*Timer3中断优先级高*/

/****************************************************************
Timer3中断标志清除
****************************************************************/
#define ClearIFTMR3() TMR3CN &= 0x7f /*Clear Timer 3 High Byte Overflow Flag*/
/*==============================================================
Global RAM声明
===============================================================*/




/*===============================================================
Static RAM声明
===============================================================*/

enum{
	PRECODE_NULL = 0x00		/*0x00*/
/*,	PRECODE_KEY0  	*/		/*0x01*/    	
,	PRECODE_KEY1			/*0x02*/
,	PRECODE_KEY2			/*0x03*/
,	PRECODE_KEY3			/*0x04*/
#if 1
,	PRECODE_DB_01			/*0x05*/
,	PRECODE_DB_02			/*0x06*/
,	PRECODE_DB_03			/*0x07*/
,	PRECODE_DB_12			/*0x08*/
,	PRECODE_DB_13			/*0x09*/
,	PRECODE_DB_23			/*0x0a*/
#endif
,	PRECODE_ERR
};


/********************************************************
按键键值定义
*********************************************************/

enum{
	NULL_KEY = 0x00		/* 0x00		*/
,	KEY0_KEY			/* 0x01		*/
,	KEY0_2S_KEY			/* 0x02		*/
,	KEY1_KEY			/* 0x03		*/
,	KEY1_2S_KEY			/* 0x04		*/
,	KEY2_KEY			/* 0x05		*/
,	KEY2_2S_KEY			/* 0x06		*/
,	KEY3_KEY			/* 0x07		*/
,	KEY3_2S_KEY			/* 0x08		*/
,	KEY0_KEY1_KEY		/* 0x09		*/
,	KEY0_KEY2_KEY		/* 0x0a		*/
,	KEY0_KEY3_KEY		/* 0x0b		*/
,	KEY1_KEY2_KEY		/* 0x0c		*/
,	KEY1_KEY3_KEY		/* 0x0d		*/
,	KEY2_KEY3_KEY		/* 0x0e		*/

};


#define KEY_PORT_STATUS   (~P1)
#define KEY1_DEF		0x01    /*P1 & 0x02*/
#define KEY2_DEF   	0x02   	/*P1 & 0x04*/
#define KEY3_DEF   	0x04   	/*P1 & 0x08*/
#define KEY12_DEF  	0x03    /*P1 & 0x06*/
#define KEY23_DEF  	0x06   	/*P1 & 0x0c*/
#define KEY13_DEF  	0x05    /*P1 & 0x0b*/

const unsigned char Dircode2Keycode_tbl[][2] = {

	{ NULL_KEY, 		0 				},	/* PRECODE_NULL				*/
	{ KEY1_KEY,			KEY1_2S_KEY		},	/* PRECODE_KEY1			*/
	{ KEY2_KEY,			KEY2_2S_KEY		},	/* PRECODE_KEY2				*/
	{ KEY3_KEY,			KEY3_2S_KEY		},	/* PRECODE_KEY3	*/
	{ NULL_KEY, 		0 				},	/* PRECODE_NULL		*/
};

#endif/*_MAIN_H*/
/*===================================================================
Version	|	Date		|	Author	|	Contents  					|
---------------------------------------------------------------------
V1.00		2012-08-19		ZQ			New code write.

====================================================================*/
